package dev.oianmol.opentestlab.android.testexec.resultreader

import dev.oianmol.opentestlab.DeviceFarmTestResults
import dev.oianmol.opentestlab.android.testexec.TestExecutionTaskSpec
import dev.oianmol.opentestlab.android.testexec.resultreader.utils.XmlTestSuite
import dev.oianmol.opentestlab.android.testexec.resultreader.utils.parseAs
import java.nio.file.Files
import kotlin.io.path.extension
import kotlin.io.path.reader

interface DeviceTestResultReader {
    fun readTestResultFor(testExecutionTaskSpec: TestExecutionTaskSpec): List<DeviceFarmTestResults.Testsuite>
}

object DefaultDeviceTestResultReader : DeviceTestResultReader {
    override fun readTestResultFor(testExecutionTaskSpec: TestExecutionTaskSpec): List<DeviceFarmTestResults.Testsuite> {
        return testExecutionTaskSpec.workingDir.listFiles()?.map { it.toPath() }
            ?.filter { Files.isRegularFile(it) && it.extension == "xml" }
            ?.toList()
            ?.map {
                val testResultItem = it.reader().readText().parseAs<XmlTestSuite>()
                DeviceFarmTestResults.Testsuite.newBuilder()
                    .setTests(testResultItem.tests?.toIntOrNull() ?: -1)
                    .setErrors(testResultItem.errors?.toIntOrNull() ?: -1)
                    .setFailures(testResultItem.failures?.toIntOrNull() ?: -1)
                    .setFailures(testResultItem.skipped?.toIntOrNull() ?: -1)
                    .setName(it.toFile().name ?: testResultItem.name ?: "Name")
                    .setHostname(testResultItem.hostname ?: "")
                    .setTime(testResultItem.time?.toIntOrNull() ?: -1)
                    .setTimestamp(testResultItem.timestamp)
                    .setProperties(
                        DeviceFarmTestResults.Properties.newBuilder()
                            .addAllProperty(testResultItem.properties?.property?.map {
                                DeviceFarmTestResults.Property.newBuilder()
                                    .setName(it.name)
                                    .setValue(it.value)
                                    .build()
                            })
                            .build()
                    )
                    .addAllTestcase(testResultItem.testcase?.map {
                        DeviceFarmTestResults.Testcase.newBuilder()
                            .setName(it.name)
                            .setClassname(it.classname)
                            .setStatus(it.status)
                            .setMessage(it.message)
                            .setType(it.type)
                            .setTime(it.time?.toIntOrNull() ?: -1)
                            .setTrace(it.trace)
                            .build()
                    }).build()
            } ?: emptyList()
    }
}