package dev.oianmol.opentestlab.android.devicefarm.cli
import java.io.File

class AdbPathFinder {

    fun findAdbPath(): String? {
        return when {
            isWindows() -> findAdbOnWindows()
            isMac() -> findAdbOnMac()
            isUnix() -> findAdbOnUnix()
            else -> null
        }
    }

    private fun findAdbOnWindows(): String? {
        val adbPaths = listOf(
            "${System.getenv("LOCALAPPDATA")}\\Android\\Sdk\\platform-tools\\adb.exe",
            "${System.getenv("ProgramFiles")}\\Android\\Sdk\\platform-tools\\adb.exe"
        )

        return adbPaths.find { File(it).exists() }
    }

    private fun findAdbOnMac(): String? {
        val adbPath = "/usr/local/bin/adb"
        return if (File(adbPath).exists()) adbPath else null
    }

    private fun findAdbOnUnix(): String? {
        val adbPath = "/usr/bin/adb"
        return if (File(adbPath).exists()) adbPath else null
    }

    private fun isWindows(): Boolean {
        return System.getProperty("os.name").toLowerCase().contains("win")
    }

    private fun isMac(): Boolean {
        return System.getProperty("os.name").toLowerCase().contains("mac")
    }

    private fun isUnix(): Boolean {
        val os = System.getProperty("os.name").toLowerCase()
        return os.contains("nix") || os.contains("nux") || os.contains("aix")
    }
}

fun main() {
    val adbPathFinder = AdbPathFinder()
    val adbPath = adbPathFinder.findAdbPath()
    if (adbPath != null) {
        println("ADB found at: $adbPath")
    } else {
        println("ADB not found.")
    }
}
