package dev.oianmol.opentestlab.android.devicefarm

import dev.oianmol.opentestlab.api.models.DeviceFarmDevice


interface DeviceAvailabilityStore {
    suspend fun markDeviceUnavailable(deviceFarmDevice: DeviceFarmDevice)
    suspend fun markDeviceAvailable(deviceFarmDevice: DeviceFarmDevice)
    suspend fun isDeviceAvailable(serialNumber: String): Boolean
}


object DefaultDeviceAvailabilityStore : DeviceAvailabilityStore {
    private val availableDevices = hashMapOf<String, Boolean>()

    override suspend fun markDeviceUnavailable(deviceFarmDevice: DeviceFarmDevice) {
        availableDevices[deviceFarmDevice.serialNumber] = false
    }

    override suspend fun markDeviceAvailable(deviceFarmDevice: DeviceFarmDevice) {
        availableDevices[deviceFarmDevice.serialNumber] = true
    }

    override suspend fun isDeviceAvailable(serialNumber: String): Boolean {
        if (availableDevices.containsKey(serialNumber).not()) {
            return true
        }
        return availableDevices[serialNumber] == true
    }
}